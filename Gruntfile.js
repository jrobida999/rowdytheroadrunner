// Generated by CoffeeScript 1.6.2
(function() {
  module.exports = function(grunt) {
    var coffeeFiles, cssFiles, htmlFiles, jsFiles;

    cssFiles = ['public/css/*.css', '!public/css/utils/*.css', '!public/css/vendor/*.css', '!public/css/inherit/*.css', 'public/css/utils/contentTypes.css', 'public/css/utils/tables.css'];
    htmlFiles = ['sm_build/*.html'];
    jsFiles = ['public/js/main.js'];
    coffeeFiles = ['public/coffeescript/*', '/Gruntfile.coffee', 'casperjs_server/app.coffee'];
    grunt.initConfig({
      pkg: grunt.file.readJSON('package.json'),
      cssmin: {
        options: {
          expand: true,
          banner: '/*! <%= pkg.name %> \n CSS Baked on <%= grunt.template.today("dddd, mmmm dS, yyyy, h:MM:ss TT") %> */\n'
        },
        combine: {
          files: {
            'sm_build/css/main.min.css': cssFiles
          }
        }
      },
      uglify: {
        options: {
          banner: '/*! <%= pkg.name %> \n JS Baked on <%= grunt.template.today("dddd, mmmm dS, yyyy, h:MM:ss TT") %> */\n\n'
        },
        my_target: {
          files: {
            'sm_build/js/main.min.js': jsFiles
          }
        }
      },
      coffee_build: {
        options: {
          wrap: true
        },
        files: coffeeFiles
      },
      less: {
        options: {
          paths: ['public/less']
        },
        local: {
          files: [
            {
              expand: true,
              cwd: 'public/less',
              src: '*.less',
              dest: 'public/css/',
              ext: '.css'
            }
          ]
        }
      },
      watch: {
        all: {
          files: [cssFiles, jsFiles, coffeeFiles, htmlFiles],
          tasks: ['cssmin', 'uglify', 'coffee_build'],
          options: {
            livereload: false
          }
        }
      }
    });
    grunt.event.on('watch', function(action, path, target) {
      return grunt.log.writeln(target + ' : ' + path + ' has been ' + action);
    });
    grunt.loadNpmTasks('grunt-contrib-cssmin');
    grunt.loadNpmTasks('grunt-contrib-watch');
    grunt.loadNpmTasks('grunt-contrib-uglify');
    grunt.loadNpmTasks('grunt-coffee-build');
    grunt.loadNpmTasks('grunt-contrib-less');
    grunt.registerTask('buildcss', ['cssmin']);
    grunt.registerTask('buildjs', ['uglify']);
    grunt.registerTask('buildCoffee', ['coffee_build']);
    grunt.registerTask('buildless', ['less']);
    grunt.registerTask('buildWatch', ['watch']);
    return grunt.registerTask('default', ['watch']);
  };

}).call(this);
